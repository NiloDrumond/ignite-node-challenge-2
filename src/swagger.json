{
  "openapi": "3.0.0",
  "info": {
    "title": "Challenge-2 Documentation",
    "description": "This is the second challenge of chapter 2 from Ignite: Node.js",
    "version": "1.0.0",
    "contact": {
      "email": "nilobdrumond@gmail.com"
    }
  },
  "components": {
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "id-long-string",
          "name": "Daniel",
          "email": "daniel@gmail.com",
          "admin": true
        }
      }
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": ["User"],
        "summary": "Create a user",
        "description": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "500": {
            "description": "User already exists"
          }
        }
      },
      "get": {
        "tags": ["User"],
        "summary": "List all users",
        "description": "List all users",
        "parameters": [
          {
            "in": "header",
            "name": "user_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "User needs to be admin"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  },
                  "example": [
                    {
                      "id": "id-long-string-1",
                      "name": "Daniel",
                      "email": "daniel@gmail.com",
                      "admin": true
                    },
                    {
                      "id": "id-long-string-2",
                      "name": "Bruno",
                      "email": "bruno@gmail.com",
                      "admin": false
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["User"],
        "summary": "Show user",
        "description": "Show user",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "minimum": 1
            },
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{user_id}/admin": {
      "post": {
        "tags": ["User"],
        "summary": "Turn user into admin",
        "description": "Turn user into admin",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "minimum": 1
            },
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  }
}
